{"disqus":{"path":"/posts/2008-03-03-linq-to-sql-overview-video/","commentCount":12,"comments":[{"postId":"4303143416","parentPostId":null,"date":"2008-03-11T17:41:27Z","author":"Charlie Calvert's Community Bl","avatar":"","message":"<p>Welcome to the forty-first Community Convergence. The big news this week is that we have moved Future</p>","replies":[]},{"postId":"4303143419","parentPostId":null,"date":"2008-03-12T12:52:56Z","author":"Rohit Sharma","avatar":"","message":"<p>Just got this link from the MSDN and this is a big milestone for Microsoft. Amazzzzing stuff you guys have made and I seriously appreciate it.<br>I like the way you have covered the various features and explanation in your thick Italian accent.<br>This will go a long way and may change design to a big extent. Kudos to the entire team.<br>Cheers,<br>Rohit<br>rohits79 - <a href=\"http://gmail.com\" rel=\"nofollow noopener\" title=\"gmail.com\">gmail.com</a></p>","replies":[]},{"postId":"4303143421","parentPostId":null,"date":"2008-03-12T14:32:23Z","author":"lucabol","avatar":"","message":"<p>Thanks for the kind words.<br>Which accent are you referring to? :)</p>","replies":[]},{"postId":"4303143423","parentPostId":null,"date":"2008-03-19T10:47:25Z","author":"Padu Merlotti","avatar":"","message":"<p>I sent the video link to a good friend of mine just to provoke him. He is italian, but his italian accent is terrible (we moved to spain when 12, then to england at 20, to brazil at 28 and to the usa at 30. He knows 5-6 languages, but none that he can claim his own :-)<br>I've watched your presentation and it was very clear and lucid. If I was reluctant about LINQ, now I'm starting to adopt it. But there are a few missing points in my mind, and by reading several blogs these last days, these questions also exist on the mind of many. For example, how LINQ fits the n-tier development model?<br>I see that there are two schools of thought nowadays, one that says to hell with DAL, LINQ to SQL \"is\" your DAL, and the other that says that LINQ is only useful as a RAD tool in small projects (or bounded within a traditional DAL).<br>Right now I'm experimenting with the first approach, creating encapsulated wcf services that makes LINQ queries directly to the datacontext obtained by the O/R designer, but I can surely see what problems may come up in a big system.<br>It would be very nice to hear something from an authority of the subject. Don't you want to blog about it?<br>Saluti di uno Italiano-Brasiliano</p>","replies":[]},{"postId":"4303143425","parentPostId":null,"date":"2008-03-19T10:48:14Z","author":"Padu Merlotti","avatar":"","message":"<p>oops... replace \"we moved\" to \"he moved\"</p>","replies":[]},{"postId":"4303143428","parentPostId":null,"date":"2008-03-19T20:12:50Z","author":"Wriju's BLOG","avatar":"","message":"<p>Luca, the Microsoft Lead Program Manager, he is one of my favorite presenters. The way he demonstrate</p>","replies":[]},{"postId":"4303143429","parentPostId":null,"date":"2008-03-19T21:50:26Z","author":"Bryan Reynolds","avatar":"","message":"<p>Padu Merlotti,<br>Great comment! We are faced with those questions.  Technology is moving quickly, which makes those question you pose difficult to answer.  <br>For example if you decide to use LINQ to SQL as you data access layer and your business layer what do you unit test?  Do you unit test?<br>Bryan</p>","replies":[]},{"postId":"4303143430","parentPostId":null,"date":"2008-03-19T22:24:43Z","author":"Padu Merlotti","avatar":"","message":"<p>Bryan,<br>I use NUnit for more traditional architected systems. This is going to be the first SOA system that I design. Haven't thought yet if NUnit will fit the new model or if I'll have to use (or come up) with something else.</p>","replies":[]},{"postId":"4303143437","parentPostId":null,"date":"2008-03-20T13:01:31Z","author":"lucabol","avatar":"","message":"<p>Hi Padu,<br>I normally think of L2S as my DAL. If you need a DAL with more capabilities (i.e. more complex object relational mappings), then L2E is your best choice.<br>If you don't like how the L2S API works (i.e. maybe your customers need a company specific way to access data), then it make sense to encapsulate L2S in your own DAL.<br>In summary, it depends :-)</p>","replies":[]},{"postId":"4303143445","parentPostId":null,"date":"2008-03-20T14:07:51Z","author":"Padu Merlotti","avatar":"","message":"<p>Luca,<br>I'm in the first week of development... that's exactly what I'm doing.<br>My wcf services encapsulate my L2S \"EL\" (Entity Layer, term that I stole from a blog I read this week).<br>So far so good...<br>I usually don't like paper thin DALs.</p>","replies":[]},{"postId":"4303143448","parentPostId":null,"date":"2008-03-28T15:59:16Z","author":"Bernd","avatar":"","message":"<p>Really nice Vid, finally I'm on the way to understand LINQ ;)</p>","replies":[]},{"postId":"4303143449","parentPostId":null,"date":"2008-04-01T11:09:07Z","author":"Marco","avatar":"","message":"<p>Another rubish from Microsoft.<br>Do they know what multiple layers mean...<br>Man what a completely rubish.</p>","replies":[]}]}}