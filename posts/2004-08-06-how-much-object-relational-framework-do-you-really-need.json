{"disqus":{"path":"/posts/2004-08-06-how-much-object-relational-framework-do-you-really-need/","commentCount":2,"comments":[{"postId":"4303144116","parentPostId":null,"date":"2004-08-06T09:46:00Z","author":"Aaron","avatar":"","message":"<p>In my group, we go the opposite direction, and I find it quite nice.<br>We codegen stongly-typed methods which correspond to the stored procs. This inspires a rather chunky SOA-style design all the way down to the persistence layer. Which is Good Thing, since databases are slow after all.<br>I guess it's not as \"cool\" as obj relational frameworks, but it works, it's fast, and it's pretty simple.</p>","replies":[]},{"postId":"4303144119","parentPostId":null,"date":"2004-08-06T13:09:00Z","author":"Paul Wilson","avatar":"","message":"<p>My ORMapper (<a href=\"http://www.ORMapper.net\" rel=\"nofollow noopener\" title=\"http://www.ORMapper.net\">http://www.ORMapper.net</a>), along with what was once MS ObjectSpaces, can be pure 3.2, but also allows for an optional interface to be implemented to avoid reflection (I'm not sure if that corresponds to your 2.2 or 3.1 though).</p>","replies":[]}]}}