{"disqus":{"path":"/posts/2008-06-06-a-c-library-to-write-functional-code-part-iv-type-unions/","commentCount":10,"comments":[{"postId":"4303143834","parentPostId":null,"date":"2008-06-06T04:49:52Z","author":"Luca Bolognese's WebLog : A C#","avatar":"","message":"<p>PingBack from <a href=\"http://blogs.msdn.com/lucabol/archive/2008/04/01/a-c-library-to-write-functional-code-part-i-background.aspx\" rel=\"nofollow noopener\" title=\"http://blogs.msdn.com/lucabol/archive/2008/04/01/a-c-library-to-write-functional-code-part-i-background.aspx\">http://blogs.msdn.com/lucabol/archive/2008/04/01/a-c-library-to-write-functional-code-part-i-background.aspx</a></p>","replies":[]},{"postId":"4303143843","parentPostId":null,"date":"2008-06-06T11:42:34Z","author":"jaredpar","avatar":"","message":"<p>I'm curious as why you chose to inherit from Record as opposed to using it as a member variable.  From your example it doesn't look like a TypeUnion \"is\" a Record so much as it uses a Record.  </p>","replies":[]},{"postId":"4303143832","parentPostId":null,"date":"2008-06-09T07:57:58Z","author":"lucabol","avatar":"","message":"<p>I cannot recall the reason, if there ever was one.<br>On the face of it, you are right.</p>","replies":[]},{"postId":"4303143845","parentPostId":null,"date":"2008-06-09T18:35:32Z","author":"configurator","avatar":"","message":"<p>To access the type union you use the Is and As operator. That means that the usage of Type1 and Type2 in the record is not needed.<br>You can simply keep the value in a member object-type field. Then, you would simplify the code of As&lt;&gt; and not really much change anything else - except the constantly unused memory slot.<br>Also, you would be more efficient because the cast to object would be unnecessary. The only two things that would enforce or use the given types would be the constructor - which would only use the given types - and the match operator.<br>Just my two pence.</p>","replies":[]},{"postId":"4303143835","parentPostId":null,"date":"2008-06-11T08:52:53Z","author":"santhiran","avatar":"","message":"<p>hi<br>very nice your teachinfg methosd pls sent all C# programming learn tools<br>Thank You</p>","replies":[]},{"postId":"4303143836","parentPostId":null,"date":"2008-06-17T22:21:07Z","author":"Coder","avatar":"","message":"<p>How can it be useful?! Does anybody have a real-world example?</p>","replies":[]},{"postId":"4303143846","parentPostId":null,"date":"2008-06-25T10:36:42Z","author":"Strange Cat","avatar":"","message":"<p>Good to know lots of italian work for Microsoft :)<br>Ciao</p>","replies":[]},{"postId":"4303143851","parentPostId":null,"date":"2008-06-27T08:15:18Z","author":"Hasan Naqvi","avatar":"","message":"<p>nice but wud u please tell us the usage of type unions in real world scenerios.</p>","replies":[]},{"postId":"4303143848","parentPostId":null,"date":"2008-06-30T11:00:46Z","author":"Humberto Moreno","avatar":"","message":"<p>I think it would be a good idea to extend the base class to support not just two types, but multiple types. - Btw. I agree with Jared Parsons suggestion.<br>Overall it's a good idea. Thanks</p>","replies":[]},{"postId":"4303143849","parentPostId":null,"date":"2008-07-15T05:46:25Z","author":"Luca Bolognese's WebLog","avatar":"","message":"<p>Other posts in the series: Part I - Background Part II - Tuples Part III - Records Part IV - Type Unions</p>","replies":[]}]}}