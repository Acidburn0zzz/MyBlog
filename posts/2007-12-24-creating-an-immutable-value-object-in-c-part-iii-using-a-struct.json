{"disqus":{"path":"/posts/2007-12-24-creating-an-immutable-value-object-in-c-part-iii-using-a-struct/","commentCount":11,"comments":[{"postId":"4303143911","parentPostId":null,"date":"2007-12-24T17:43:01Z","author":"Luca Bolognese's WebLog : Crea","avatar":"","message":"<p>PingBack from <a href=\"http://blogs.msdn.com/lucabol/archive/2007/12/06/creating-an-immutable-value-object-in-c-part-ii-making-the-class-better.aspx\" rel=\"nofollow noopener\" title=\"http://blogs.msdn.com/lucabol/archive/2007/12/06/creating-an-immutable-value-object-in-c-part-ii-making-the-class-better.aspx\">http://blogs.msdn.com/lucabol/archive/2007/12/06/creating-an-immutable-value-object-in-c-part-ii-making-the-class-better.aspx</a></p>","replies":[]},{"postId":"4303143905","parentPostId":null,"date":"2007-12-28T18:45:34Z","author":"Luca Bolognese's WebLog","avatar":"","message":"<p>Other posts: Part I - Using a class Part II - Making the class better Part III - Using a struct In the</p>","replies":[]},{"postId":"4303143916","parentPostId":null,"date":"2007-12-28T19:06:21Z","author":"Noticias externas","avatar":"","message":"<p>Other posts: Part I - Using a class Part II - Making the class better Part III - Using a struct In the</p>","replies":[]},{"postId":"4303143914","parentPostId":null,"date":"2008-01-02T16:13:59Z","author":"Charlie Calvert's Community Bl","avatar":"","message":"<p>Welcome to the thirty-eighth Community Convergence. These posts are designed to keep you in touch with</p>","replies":[]},{"postId":"4303143919","parentPostId":null,"date":"2008-01-09T11:45:58Z","author":"Bob","avatar":"","message":"<p>Combine the union and intersect into a single private function. Â Add a 1 line wrapper function for the existing union and intersect functions which calls the combined function.<br>This is to ensure that the checking of parameter arguments and HasValue are done the same for both union and intersect (i..e, only one set of code to maintain.)<br>Change exception message so that the message identifies the object datatype (DateSpan) that is invalid (simplifies support calls and enhances maintainability)<br>Change<br>pstart.ToString() + \" doesn't come before \" + pend.ToString());<br>to<br>\"DateSpan invalid: \" + pstart.ToString() + \" doesn't come before \" + pend.ToString());</p>","replies":[]},{"postId":"4303143921","parentPostId":null,"date":"2008-01-11T13:36:13Z","author":"Luca Bolognese's WebLog","avatar":"","message":"<p>Other posts: Part I - Using a class Part II - Making the class better Part III - Using a struct Part</p>","replies":[]},{"postId":"4303143923","parentPostId":null,"date":"2008-01-11T13:52:09Z","author":"Noticias externas","avatar":"","message":"<p>Other posts: Part I - Using a class Part II - Making the class better Part III - Using a struct Part</p>","replies":[]},{"postId":"4303143928","parentPostId":null,"date":"2008-01-16T18:36:54Z","author":"Tales from the Evil Empire","avatar":"","message":"<p>For some reason, there's been a lot of buzz lately around immutability in C#. If you're interested in</p>","replies":[]},{"postId":"4303143929","parentPostId":null,"date":"2008-01-18T08:01:36Z","author":"akhayre2000@yahoo.co.ukl","avatar":"","message":"<p>i have get thart to t you that<br>{<br>}<br>{<br> would you thjat</p>","replies":[]},{"postId":"4303143930","parentPostId":null,"date":"2008-06-03T15:38:04Z","author":"adamjcooper.com/blog","avatar":"","message":"<p>The Quest for Quick-and-Easy Class-Based Immutable Value Objects in C# - Part 1: Introduction</p>","replies":[]},{"postId":"4303143932","parentPostId":null,"date":"2008-06-03T16:57:49Z","author":"adamjcooper.com/blog","avatar":"","message":"<p>The Quest for Quick-and-Easy Immutable Value Objects in C#</p>","replies":[]}]}}