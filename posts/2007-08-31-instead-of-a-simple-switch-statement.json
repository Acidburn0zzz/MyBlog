{"disqus":{"path":"/posts/2007-08-31-instead-of-a-simple-switch-statement/","commentCount":5,"comments":[{"postId":"4303143981","parentPostId":null,"date":"2007-08-31T17:16:42Z","author":"drysart@gmail.com","avatar":"","message":"<p>It looks so silly when someone /else/ does it....</p>","replies":[]},{"postId":"4303143988","parentPostId":null,"date":"2007-08-31T17:35:45Z","author":"MichaelGiagnocavo","avatar":"","message":"<p>Yes, let the functions flow through you. Add a bit of aliasing and easier delegate syntax and succinctness incarnate.</p>","replies":[]},{"postId":"4303143994","parentPostId":null,"date":"2007-08-31T23:29:55Z","author":"Bill Mill","avatar":"","message":"<p>This is from python 101, except without all the &lt;&gt;&lt;&lt;type&gt;&gt; business; It's an excellent way to seperate code from data.</p>","replies":[]},{"postId":"4303143990","parentPostId":null,"date":"2007-09-17T10:07:22Z","author":"Greg","avatar":"","message":"<p>Please don't put that into production code.  This type of cute code will serve to hide the actual functionality or business reasons behind the code. It will greatly increase the cost to support and maintain production code.      It is simple when presented out of context here but when combined with dozens of similar approaches in a production system, it is unmaintainable.   I've seen this in three different environments C with structs of function pointers, C++ and C#.  </p>","replies":[]},{"postId":"4303143993","parentPostId":null,"date":"2007-09-18T08:53:35Z","author":"Doeke Zanstra","avatar":"","message":"<p>This looks a bit of a scripting solution. I'm not sure I like it. OK, it's a cool programming technique, but does it solve a problem?<br>In comparison to a switch statement:<br>1) The code executes a bit slower<br>2) It adds a layer of indirection, so it's more complex, thus harder to read<br>3) \"It's an excellent way to seperate code from data\". Is it?<br>The enum, and the Dictionary are still seperate... I would like to have java enums in c#. That way, you can combine the enum-items with the specific delegate.<br>That way, the code is shorter, one (very small) step faster than the code above, but above all: it's easier to understand (provided, you know the syntax of course).<br><a href=\"http://java.sun.com/j2se/1.5.0/docs/guide/language/enums.html\" rel=\"nofollow noopener\" title=\"http://java.sun.com/j2se/1.5.0/docs/guide/language/enums.html\">http://java.sun.com/j2se/1.5.0/docs/guide/language/enums.html</a></p>","replies":[]}]}}