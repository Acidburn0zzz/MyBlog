{"disqus":{"path":"/posts/2007-02-27-which-type-should-i-use-in-c-to-represent-numbers/","commentCount":12,"comments":[{"postId":"4303144061","parentPostId":null,"date":"2007-02-27T18:29:35Z","author":"Cory Nelson","avatar":"","message":"<p>i really mean this in the nicest way: if you get confused by unsigned types, stop coding.  maybe the technical lead needs to have more faith in the competency of the developers he is targeting.</p>","replies":[]},{"postId":"4303144068","parentPostId":null,"date":"2007-02-27T19:12:35Z","author":"Sean","avatar":"","message":"<p>Yeah, but in the .NET framework unsigned types are not CLR compliant, which you might or might not be worried about.</p>","replies":[]},{"postId":"4303144070","parentPostId":null,"date":"2007-02-27T19:24:05Z","author":"Fabrice's weblog","avatar":"","message":"<p>Luca Bolognese, from the Microsoft C# team, has an interesting post that aims at providing answers to</p>","replies":[]},{"postId":"4303144069","parentPostId":null,"date":"2007-02-27T20:35:24Z","author":"NBC","avatar":"","message":"<p>but if you use what the value means, isn't it more  readable ?<br>I mean if you have a file header<br>with a uint32 fourcc then a uint16 version value, its more readable since you know what you should look for. if you use int fourcc and int version i don\"t know how the bytes map in the file.</p>","replies":[]},{"postId":"4303144073","parentPostId":null,"date":"2007-02-27T20:59:12Z","author":"Eber Irigoyen","avatar":"","message":"<p>but this applies to the whole CTS, not just C#... right?</p>","replies":[]},{"postId":"4303144067","parentPostId":null,"date":"2007-02-28T22:57:25Z","author":".NET a 2.860 m de altura","avatar":"","message":"<p>C# nos ofrece varios tipos de datos para representar n&amp;uacute;meros y, sobretodo para quienes est&amp;aacute;n</p>","replies":[]},{"postId":"4303144072","parentPostId":null,"date":"2007-03-01T20:54:07Z","author":"There Must Be Some Mistake","avatar":"","message":"<p>Saw this post today describing basic guidance for when to use the different numeric data types available</p>","replies":[]},{"postId":"4303144071","parentPostId":null,"date":"2007-03-02T03:23:24Z","author":"Charlie Calvert's Community Bl","avatar":"","message":"<p>Welcome to the twenty-second Community Convergence, the March CTP issue. I'm Charlie Calvert, the C#</p>","replies":[]},{"postId":"4303144080","parentPostId":null,"date":"2007-03-02T03:37:00Z","author":"RSS It All","avatar":"","message":"<p>Welcome to the twenty-second Community Convergence, the March CTP issue. I&amp;#039m Charlie Calvert, the</p>","replies":[]},{"postId":"4303144083","parentPostId":null,"date":"2007-03-02T18:36:41Z","author":"Ronaldo Ferreira","avatar":"","message":"<p>I coded these days a method that reads a binary file, but all data were represented with only two bytes (an ushort is enough). I really do not see the reason to \"forget\" these types. If I have coded this same method with int, I have had throw away a lot of bytes.</p>","replies":[]},{"postId":"4303144081","parentPostId":null,"date":"2007-03-03T10:34:00Z","author":"NBC","avatar":"","message":"<p>&gt;I have had throw away a lot of bytes.<br>internaly it maybe have been casted as int anyway by the compilator</p>","replies":[]},{"postId":"4303144085","parentPostId":null,"date":"2007-03-11T07:34:06Z","author":"AS","avatar":"","message":"<p>I want to write a Matrix (Math) with generics that can instance it with all numbers(float, double, int,...).<br>any idea?<br>I think it is imposible.<br>[imposible says i am posible :) ]</p>","replies":[]}]}}